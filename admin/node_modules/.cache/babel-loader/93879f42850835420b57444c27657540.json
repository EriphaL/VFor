{"remainingRequest":"/Users/eripha/Desktop/project/routine/admin/node_modules/babel-loader/lib/index.js!/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eripha/Desktop/project/routine/admin/src/views/HeroEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eripha/Desktop/project/routine/admin/src/views/HeroEdit.vue","mtime":1593006952781},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HeroEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA,eAAA;AACA,EAAA,KAAA,EAAA;AACA;AACA;AACA,IAAA,EAAA,EAAA;AAHA,GADA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA,EAFA;AAGA,QAAA,MAAA,EAAA,EAHA;AAIA,QAAA,MAAA,EAAA;AACA,UAAA,SAAA,EAAA;AADA,SAJA;AAOA,QAAA,MAAA,EAAA,EAPA;AAQA,QAAA,QAAA,EAAA;AARA;AAJA,KAAA;AAeA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,IAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAYA,KAAA,EAZA;AAAA;AAAA;AAAA;;AAAA;AAAA,8CAaA,KAAA,KAAA,CAAA,GAAA,wBAAA,KAAA,EAAA,GAAA,KAAA,KAAA,CAbA;;AAAA;AAaA,cAAA,GAbA;AAAA;AAAA;;AAAA;AAAA;AAAA,8CAeA,KAAA,KAAA,CAAA,IAAA,CAAA,cAAA,EAAA,KAAA,KAAA,CAfA;;AAAA;AAeA,cAAA,GAfA;;AAAA;AAiBA;AACA,mBAAA,GAAA,CAlBA,CAoBA;AACA;;AACA,mBAAA,OAAA,CAAA,IAAA,CAAA,cAAA;AACA,mBAAA,QAAA,CAAA;AACA,gBAAA,IAAA,EAAA,SADA;AAEA,gBAAA,OAAA,EAAA;AAFA,eAAA;;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;AACA,IAAA,KA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CA8BA,KAAA,KAAA,CAAA,GAAA,wBAAA,KAAA,EAAA,EA9BA;;AAAA;AA8BA,cAAA,GA9BA;AA+BA;AACA;AACA;AACA;AACA,mBAAA,KAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,KAAA,EAAA,GAAA,CAAA,IAAA,CAAA;;AAnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqCA;AACA,IAAA,eAtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAuCA,KAAA,KAAA,CAAA,GAAA,oBAvCA;;AAAA;AAuCA,cAAA,GAvCA;AAwCA;AACA,mBAAA,UAAA,GAAA,GAAA,CAAA,IAAA;;AAzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA;AACA,IAAA,UA5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CA6CA,KAAA,KAAA,CAAA,GAAA,eA7CA;;AAAA;AA6CA,cAAA,GA7CA;AA8CA;AACA,mBAAA,KAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,KAAA,EAAA,GAAA,CAAA,IAAA,CAAA;;AA/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiDA,IAAA,WAjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAkDA,KAAA,KAAA,CAAA,GAAA,gBAlDA;;AAAA;AAkDA,cAAA,GAlDA;AAmDA;AACA,mBAAA,MAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,MAAA,EAAA,GAAA,CAAA,IAAA,CAAA;;AApDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAvBA;AA8EA,EAAA,OA9EA,qBA8EA;AACA,SAAA,eAAA;AACA,SAAA,UAAA;AACA,SAAA,WAAA,GAHA,CAIA;;AACA,SAAA,EAAA,IAAA,KAAA,KAAA,EAAA;AACA;AApFA,CAAA","sourcesContent":["\n<template>\n  <!-- 分类创建及编辑页 -->\n  <div>\n    <!-- 如果url带id参数，就显示编辑分类，不带就显示新建分类 -->\n    <h1>{{id ? '编辑':'新建'}}英雄</h1>\n    <!-- 点击保存按钮提交需要触发submit的原生事件，prevent表示阻止提交，不要跳转页面，定义一个save方法，写在methods中。在这边添加 -->\n    <el-form @submit.native.prevent=\"save\">\n      <!-- value值是默认显示那一页 -->\n      <el-tabs value=\"basic\" type=\"border-card\">\n        <el-tab-pane label=\"基本信息\" name=\"basic\">\n          <el-form-item label=\"名称\">\n            <el-input v-model=\"model.name\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"称号\">\n            <el-input v-model=\"model.title\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"类型\">\n            <!-- 加一个multiple实现多选 -->\n            <el-select v-model=\"model.categories\" multiple>\n              <el-option\n                v-for=\"item of categories\"\n                :key=\"item._id\"\n                :value=\"item._id\"\n                :label=\"item.name\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"难度\">\n            <!-- 多级很可能会报错，所以要先在下面的data中定义一个空的，先至少保证它的存在 -->\n            <el-rate :max=\"9\" show-score v-model=\"model.scores.difficult\"></el-rate>\n          </el-form-item>\n          <el-form-item label=\"技能\">\n            <!-- 多级很可能会报错，所以要先在下面的data中定义一个空的，先至少保证它的存在 -->\n            <el-rate :max=\"9\" show-score v-model=\"model.scores.skills\"></el-rate>\n          </el-form-item>\n          <el-form-item label=\"攻击\">\n            <!-- 多级很可能会报错，所以要先在下面的data中定义一个空的，先至少保证它的存在 -->\n            <el-rate :max=\"9\" show-score v-model=\"model.scores.attack\"></el-rate>\n          </el-form-item>\n          <el-form-item label=\"生存\">\n            <!-- 多级很可能会报错，所以要先在下面的data中定义一个空的，先至少保证它的存在 -->\n            <el-rate :max=\"9\" show-score v-model=\"model.scores.survive\"></el-rate>\n          </el-form-item>\n          <el-form-item label=\"头像\">\n            <!-- :表示动态绑定\n          action表示上传的接口地址是什么 ，加上upload拼成上传地址,defaults表示默认参数\n            成功之后，在on-success中需要把返回来的图片的地址的值赋值给model.icon-->\n            <el-upload\n              class=\"avatar-uploader\"\n              :headers=\"getAuthHeaders()\"\n              :action=\"uploadUrl\"\n              :show-file-list=\"false\"\n              :on-success=\"res => $set(model,'avatar',res.url)\"\n            >\n              <!-- 如果有图片地址显示图片 -->\n              <img v-if=\"model.avatar\" :src=\"model.avatar\" class=\"avatar\" />\n              <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n            </el-upload>\n          </el-form-item>\n          <el-form-item label=\"背景图\">\n            <el-upload\n              class=\"avatar-uploader\"\n              :headers=\"getAuthHeaders()\"\n              :action=\"uploadUrl\"\n              :show-file-list=\"false\"\n              :on-success=\"res => $set(model,'banner',res.url)\"\n            >\n              <!-- 如果有图片地址显示图片 -->\n              <img v-if=\"model.banner\" :src=\"model.banner\" class=\"avatar\" />\n              <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n            </el-upload>\n          </el-form-item>\n          <el-form-item label=\"顺风出装\">\n            <el-select v-model=\"model.items1\" multiple>\n              <el-option v-for=\"item of items\" :key=\"item._id\" :label=\"item.name\" :value=\"item._id\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"逆风出装\">\n            <el-select v-model=\"model.items2\" multiple>\n              <el-option v-for=\"item of items\" :key=\"item._id\" :label=\"item.name\" :value=\"item._id\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"使用技巧\">\n            <el-input type=\"textarea\" v-model=\"model.usageTips\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"对抗技巧\">\n            <el-input type=\"textarea\" v-model=\"model.battleTips\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"团战思路\">\n            <el-input type=\"textarea\" v-model=\"model.teamTips\"></el-input>\n          </el-form-item>\n        </el-tab-pane>\n        <el-tab-pane label=\"技能\" name=\"skills\">\n          <!-- 点击添加往里面新增一个空对象以供续写 -->\n          <el-button type=\"text\" @click=\"model.skills.push({})\">\n            <i class=\"el-icon-plus\"></i> 添加技能\n          </el-button>\n          <!-- 需要一个横向的排版 有技能名字和其对应的图标; flex-wrap:wrap表示换行-->\n          <el-row type=\"flex\" style=\"flex-wrap:wrap\">\n            <!-- i表示该循环的索引值 -->\n            <el-col :md=\"12\" v-for=\"(item,i) in model.skills\" :key=\"i\" style=\"padding-right:20px;\">\n              <el-form-item label=\"技能名称\">\n                <el-input v-model=\"item.name\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"技能图标\">\n                <!-- on-success成功的话显示赋值 -->\n                <el-upload\n                  class=\"avatar-uploader\"\n                  :headers=\"getAuthHeaders()\"\n                  :action=\"uploadUrl\"\n                  :show-file-list=\"false\"\n                  :on-success=\"res => $set(item,'icon',res.url)\"\n                >\n                  <!-- 如果有图片地址显示图片 -->\n                  <img v-if=\"item.icon\" :src=\"item.icon\" class=\"avatar\" />\n                  <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n                </el-upload>\n              </el-form-item>\n              <el-form-item label=\"冷却值\">\n                <el-input type=\"textarea\" v-model=\"item.cd\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"消耗\">\n                <el-input type=\"textarea\" v-model=\"item.cost\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"技能介绍\">\n                <el-input v-model=\"item.description\" type=\"textarea\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"小提示\">\n                <el-input v-model=\"item.tips\" type=\"textarea\"></el-input>\n              </el-form-item>\n              <el-form-item>\n                <!-- 删除当前位置（索引index=i）的技能信息 -->\n                <el-button type=\"danger\" size=\"small\" @click=\"model.skills.splice(i,1)\">删除</el-button>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-tab-pane>\n        <el-tab-pane label=\"最佳搭档\" name=\"partners\">\n          <el-button type=\"text\" @click=\"model.partners.push({})\">\n            <i class=\"el-icon-plus\"></i> 添加英雄\n          </el-button>\n          <!-- 需要一个横向的排版 有技能名字和其对应的图标; flex-wrap:wrap表示换行-->\n          <el-row type=\"flex\" style=\"flex-wrap:wrap\">\n            <!-- i表示该循环的索引值 -->\n            <el-col\n              :md=\"12\"\n              v-for=\"(item,i) in model.partners\"\n              :key=\"i\"\n              style=\"padding-right:20px;\"\n            >\n              <!-- ,加一个过滤器可以按名称搜索 -->\n              <el-form-item label=\"英雄名称\">\n                <el-select filterable v-model=\"item.hero\">\n                  <el-option\n                    v-for=\"hero in heroes\"\n                    :key=\"hero._id\"\n                    :value=\"hero._id\"\n                    :label=\"hero.name\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"描述\">\n                <el-input v-model=\"item.description\" type=\"textarea\"></el-input>\n              </el-form-item>\n              <el-form-item>\n                <!-- 删除当前位置（索引index=i）的技能信息 -->\n                <el-button type=\"danger\" size=\"small\" @click=\"model.partners.splice(i,1)\">删除</el-button>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-tab-pane>\n      </el-tabs>\n\n      <el-form-item style=\"margin-top:1rem;\">\n        <el-button type=\"primary\" native-type=\"submit\">保存</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    //在router的js文件中声明，这个页面可以跟路由尽可能的解耦\n    //接收id这个参数\n    id: {}\n  },\n  data () {\n    return {\n      categories: [],\n      items: [],\n      heroes: [],\n      model: {\n        name: '',\n        avatar: '',\n        banner: '',\n        scores: {\n          difficult: 0\n        },\n        skills: [],\n        partners: [],\n      },\n    }\n  },\n  methods: {\n    // afterUpload (res) {\n    //   //（前提：上面data中model:{}的情况下）显示赋值，三个参数，给this.model，赋一个属性'avatar',值为res.url\n    //   // this.$set(this.model,'avatar',res.url)\n    //   //只要在data里面初始化空值定义好了，就可以像下面这样用\n    //   this.model.avatar = res.url\n    // },\n    //和后端的接口一样，用 async方式，把异步回调的方法换成同步，要用的话async和await成对使用\n    //新建和编辑的save方法要做条件判断\n    //新建：post接口  ；编辑：put接口\n    async save () {\n      let res\n      if (this.id) {\n        res = await this.$http.put(`/rest/heroes/${this.id}`, this.model)\n      } else {\n        res = await this.$http.post('/rest/heroes', this.model)\n      }\n      //eslint检查不能声明未引用的变量，所以加上这一句\n      void res\n\n      // const res = await this.$http.post('categories',this.model)\n      // this.$http.post('categories', this.model)\n      this.$router.push('/heroes/list')\n      this.$message({\n        type: 'success',\n        message: '保存成功'\n      })\n    },\n    //根据id获取到当前记录详情，把名称填充到input中去\n    async fetch () {\n      const res = await this.$http.get(`/rest/heroes/${this.id}`)\n      //完整赋值，右边服务端的res会完整覆盖掉左边的东西，所以scores可能会没有\n      // this.model = res.data\n      //另一种赋值方法,三个参数，先赋空值，然后把this.model中的内容添加进去，再把res.data添加。\n      //这样可以 如果model中有score，会先添加进去，res.data中要是没有score也不会影响。如果两个有重名，res.data中的值会覆盖this.model中的值\n      this.model = Object.assign({}, this.model, res.data)\n    },\n    //根据id获取到当前记录详情，把名称填充到input中去\n    async fetchCategories () {\n      const res = await this.$http.get(`/rest/categories`)\n      //当前的分类里面包含所有内容。但是事实只需要英雄一个分类。接下来要处理\n      this.categories = res.data\n    },\n    //根据id获取到当前记录详情，把名称填充到input中去\n    async fetchItems () {\n      const res = await this.$http.get(`/rest/items`)\n      //当前的分类里面包含所有内容。但是事实只需要英雄一个分类。接下来要处理\n      this.items = Object.assign({}, this.items, res.data)\n    },\n    async fetchHeroes () {\n      const res = await this.$http.get(`/rest/heroes`)\n      //当前的分类里面包含所有内容。但是事实只需要英雄一个分类。接下来要处理\n      this.heroes = Object.assign({}, this.heroes, res.data)\n    },\n  },\n  created () {\n    this.fetchCategories()\n    this.fetchItems()\n    this.fetchHeroes()\n    //前面这个条件满足之后（url带id参数，即当前处于编辑页面），再执行第二个条件\n    this.id && this.fetch()\n  },\n}\n</script>\n\n<style>\n</style>"],"sourceRoot":"src/views"}]}