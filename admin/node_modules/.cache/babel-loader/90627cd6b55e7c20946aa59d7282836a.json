{"remainingRequest":"/Users/eripha/Desktop/project/routine/admin/node_modules/babel-loader/lib/index.js!/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eripha/Desktop/project/routine/admin/src/views/VEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eripha/Desktop/project/routine/admin/src/views/VEdit.vue","mtime":1593006952782},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8g6Kej5p6E55qE6LWL5YC85pa55rOVCi8vIGltcG9ydCB7IFZ1ZUVkaXRvciB9IGZyb20gInZ1ZTItZWRpdG9yIjsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICAvL+WcqHJvdXRlcueahGpz5paH5Lu25Lit5aOw5piO77yM6L+Z5Liq6aG16Z2i5Y+v5Lul6Lef6Lev55Sx5bC95Y+v6IO955qE6Kej6ICmCiAgICAvL+aOpeaUtmlk6L+Z5Liq5Y+C5pWwCiAgICBpZDoge30KICB9LAogIC8vIGNvbXBvbmVudHM6IHsKICAvLyAgIFZ1ZUVkaXRvcgogIC8vIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIC8vIOm7mOiupOmAieS4re+8jOi/mOmcgOimgeWIneWni+WMlmNoYXJhY3RlcuaVsOe7hAogICAgICBtb2RlbDogewogICAgICAgIGNoYXJhY3RlcjogJzVkZWY1YmM3ODM5NDcxMWU0NDc1NTMxMicKICAgICAgfSwKICAgICAgY2hhcmFjdGVyOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8v5ZKM5ZCO56uv55qE5o6l5Y+j5LiA5qC377yM55SoIGFzeW5j5pa55byP77yM5oqK5byC5q2l5Zue6LCD55qE5pa55rOV5o2i5oiQ5ZCM5q2l77yM6KaB55So55qE6K+dYXN5bmPlkoxhd2FpdOaIkOWvueS9v+eUqAogICAgLy/mlrDlu7rlkoznvJbovpHnmoRzYXZl5pa55rOV6KaB5YGa5p2h5Lu25Yik5patCiAgICAvL+aWsOW7uu+8mnBvc3TmjqXlj6MgIO+8m+e8lui+ke+8mnB1dOaOpeWPowogICAgc2F2ZTogZnVuY3Rpb24gc2F2ZSgpIHsKICAgICAgdmFyIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBzYXZlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBpZiAoIXRoaXMuaWQpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKHRoaXMuJGh0dHAucHV0KCIvcmVzdC92Y2FyZHMvIi5jb25jYXQodGhpcy5pZCksIHRoaXMubW9kZWwpKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAodGhpcy4kaHR0cC5wb3N0KCcvcmVzdC92Y2FyZHMnLCB0aGlzLm1vZGVsKSk7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAvL2VzbGludOajgOafpeS4jeiDveWjsOaYjuacquW8leeUqOeahOWPmOmHj++8jOaJgOS7peWKoOS4iui/meS4gOWPpQogICAgICAgICAgICAgIHRoaXMubW9kZWwgPSByZXMuZGF0YTsgLy8gY29uc3QgcmVzID0gYXdhaXQgdGhpcy4kaHR0cC5wb3N0KCdjYXRlZ29yaWVzJyx0aGlzLm1vZGVsKQogICAgICAgICAgICAgIC8vIHRoaXMuJGh0dHAucG9zdCgnY2F0ZWdvcmllcycsIHRoaXMubW9kZWwpCgogICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvdmNhcmRzL2xpc3QnKTsKICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICfkv53lrZjmiJDlip8nCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBudWxsLCB0aGlzKTsKICAgIH0sCiAgICAvL+agueaNrmlk6I635Y+W5Yiw5b2T5YmN6K6w5b2V6K+m5oOF77yM5oqK5ZCN56ew5aGr5YWF5YiwaW5wdXTkuK3ljrsKICAgIGZldGNoOiBmdW5jdGlvbiBmZXRjaCgpIHsKICAgICAgdmFyIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBmZXRjaCQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAodGhpcy4kaHR0cC5nZXQoIi9yZXN0L3ZjYXJkcy8iLmNvbmNhdCh0aGlzLmlkKSkpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIHRoaXMubW9kZWwgPSByZXMuZGF0YTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIG51bGwsIHRoaXMpOwogICAgfSwKICAgIC8v6I635Y+W5LiL5ouJ5YiX6KGo5Lit55qE5LiK57qn5YiG57G7CiAgICBmZXRjaENoYXJhY3RlcjogZnVuY3Rpb24gZmV0Y2hDaGFyYWN0ZXIoKSB7CiAgICAgIHZhciByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gZmV0Y2hDaGFyYWN0ZXIkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKHRoaXMuJGh0dHAuZ2V0KCIvcmVzdC9oZXJvZXMiKSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgdGhpcy5jaGFyYWN0ZXIgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmNoYXJhY3RlciwgcmVzLmRhdGEpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgbnVsbCwgdGhpcyk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5mZXRjaENoYXJhY3RlcigpOyAvL+WJjemdoui/meS4quadoeS7tua7oei2s+S5i+WQju+8iHVybOW4pmlk5Y+C5pWw77yM5Y2z5b2T5YmN5aSE5LqO57yW6L6R6aG16Z2i77yJ77yM5YaN5omn6KGM56ys5LqM5Liq5p2h5Lu2CgogICAgdGhpcy5pZCAmJiB0aGlzLmZldGNoKCk7CiAgfSAvLyBhc3luYyBoYW5kbGVJbWFnZUFkZGVkIChmaWxlLCBFZGl0b3IsIGN1cnNvckxvY2F0aW9uLCByZXNldFVwbG9hZGVyKSB7CiAgLy8gICAvLyBBbiBleGFtcGxlIG9mIHVzaW5nIEZvcm1EYXRhCiAgLy8gICAvLyBOT1RFOiBZb3VyIGtleSBjb3VsZCBiZSBkaWZmZXJlbnQgc3VjaCBhczoKICAvLyAgIC8vIGZvcm1EYXRhLmFwcGVuZCgnZmlsZScsIGZpbGUpCiAgLy8gICAvL2h0bWzph4zpnaLoh6rluKbnmoTkuIDkuKrnsbvvvIzmj5DkuqTooajljZXmlbDmja7lsLHlj6/ku6XnlKhmb3JtZGF0YeOAguWPr+S7peacieihqOWNleaVsOaNruWSjGpzb27mlbDmja4KICAvLyAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgLy8gICAvL+azqOaEj+WQjeWtl+aYr2ZpbGXvvIjnrKzkuIDkuKrvvInvvIzlm6DkuLpzZXJ2ZXLnq6/kuK11cGxvYWQuc2luZ2xlKCdmaWxlJynmjqXmlLbnmoTmmK9maWxl77yM4oCcZmlsZeKAneimgeS/neaMgeS4gOiHtAogIC8vICAgZm9ybURhdGEuYXBwZW5kKCJmaWxlIiwgZmlsZSk7CiAgLy8gICAvL3Jlc+WwseaYr+S4i+mdoueahHJlc3VsdAogIC8vICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy4kaHR0cC5wb3N0KCJ1cGxvYWQiLCBmb3JtRGF0YSk7CiAgLy8gICAvLyAg5LiK6Z2i5LiA5Y+l6K+d5bCx5Y+v5Lul5Y+W5LujCiAgLy8gICAvLyAgYXhpb3MoewogIC8vICAgLy8gICB1cmw6ICJodHRwczovL2Zha2VhcGkueW91cnNpdGUuY29tL2ltYWdlcyIsCiAgLy8gICAvLyAgIG1ldGhvZDogIlBPU1QiLAogIC8vICAgLy8gICBkYXRhOiBmb3JtRGF0YQogIC8vICAgLy8gfSkKICAvLyAgIC8vY3Vyc29yTG9jYXRpb27lhYnmoIfkvY3nva7vvIzmj5LlhaXkuIDkuKrlj4LmlbDvvIzlj4LmlbDnmoTkvY3nva4KICAvLyAgIEVkaXRvci5pbnNlcnRFbWJlZChjdXJzb3JMb2NhdGlvbiwgImltYWdlIiwgcmVzLmRhdGEudXJsKTsKICAvLyAgIC8v6YeN572u5LiK5Lyg5ZmoCiAgLy8gICByZXNldFVwbG9hZGVyKCk7CiAgLy8gfQoKfTs="},{"version":3,"sources":["VEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA;AACA;AACA,IAAA,EAAA,EAAA;AAHA,GADA;AAMA;AACA;AACA;AACA,EAAA,IATA,kBASA;AACA,WAAA;AACA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,SAAA,EAAA;AADA,OAFA;AAKA,MAAA,SAAA,EAAA;AALA,KAAA;AAOA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA,IAAA,IAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMA,KAAA,EANA;AAAA;AAAA;AAAA;;AAAA;AAAA,8CAOA,KAAA,KAAA,CAAA,GAAA,wBAAA,KAAA,EAAA,GAAA,KAAA,KAAA,CAPA;;AAAA;AAOA,cAAA,GAPA;AAAA;AAAA;;AAAA;AAAA;AAAA,8CASA,KAAA,KAAA,CAAA,IAAA,CAAA,cAAA,EAAA,KAAA,KAAA,CATA;;AAAA;AASA,cAAA,GATA;;AAAA;AAWA;AACA,mBAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAZA,CAcA;AACA;;AACA,mBAAA,OAAA,CAAA,IAAA,CAAA,cAAA;AACA,mBAAA,QAAA,CAAA;AACA,gBAAA,IAAA,EAAA,SADA;AAEA,gBAAA,OAAA,EAAA;AAFA,eAAA;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA,IAAA,KAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAwBA,KAAA,KAAA,CAAA,GAAA,wBAAA,KAAA,EAAA,EAxBA;;AAAA;AAwBA,cAAA,GAxBA;AAyBA,mBAAA,KAAA,GAAA,GAAA,CAAA,IAAA;;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AACA,IAAA,cA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CA6BA,KAAA,KAAA,CAAA,GAAA,gBA7BA;;AAAA;AA6BA,cAAA,GA7BA;AA8BA,mBAAA,SAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,SAAA,EAAA,GAAA,CAAA,IAAA,CAAA;;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAlBA;AAmDA,EAAA,OAnDA,qBAmDA;AACA,SAAA,cAAA,GADA,CAEA;;AACA,SAAA,EAAA,IAAA,KAAA,KAAA,EAAA;AACA,GAvDA,CAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5EA,CAAA","sourcesContent":["\n<template>\n  <!-- 分类创建及编辑页 -->\n  <div>\n    <!-- 如果url带id参数，就显示编辑分类，不带就显示新建分类 -->\n    <h1>{{id ? '编辑':'新建'}}Vcard</h1>\n    <!-- 点击保存按钮提交需要触发submit的原生事件，prevent表示阻止提交，不要跳转页面，定义一个save方法，写在methods中。在这边添加 -->\n    <el-form @submit.native.prevent=\"save\">\n      <el-form-item label=\"所属人物\">\n        <el-select v-model=\"model.character\" @change=\"getSelect\">\n          <!-- lable决定选项显示什么内容，value决定点击它时真正存的是什么内容 -->\n          <el-option\n            v-for=\"item in character\"\n            :key=\"item._id\"\n            :label=\"item.name\"\n            :value=\"item._id\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"场景\">\n        <el-input v-model=\"model.scene\" style=\"padding-left:5rem;\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"引用自\">\n        <el-input  v-model=\"model.from\" style=\"padding-left:5rem;\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"英文台词\">\n        <el-input type=\"textarea\" v-model=\"model.partEn\" style=\"padding-left:5rem;\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"中文译文\">\n        <el-input type=\"textarea\" v-model=\"model.partZh\" style=\"padding-left:5rem;\"></el-input>\n      </el-form-item>\n      <!-- <el-form-item label=\"文章内容\">\n        <div>\n          <vue-editor v-model=\"model.body\"></vue-editor>\n        </div>\n      </el-form-item> -->\n      <el-form-item>\n        <el-button type=\"primary\" native-type=\"submit\">保存</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n// 解构的赋值方法\n// import { VueEditor } from \"vue2-editor\";\n\nexport default {\n  props: {\n    //在router的js文件中声明，这个页面可以跟路由尽可能的解耦\n    //接收id这个参数\n    id: {}\n  },\n  // components: {\n  //   VueEditor\n  // },\n  data () {\n    return {\n      // 默认选中，还需要初始化character数组\n      model: {\n        character:'5def5bc78394711e44755312'\n      },\n      character: [],\n    }\n  },\n  methods: {\n    //和后端的接口一样，用 async方式，把异步回调的方法换成同步，要用的话async和await成对使用\n    //新建和编辑的save方法要做条件判断\n    //新建：post接口  ；编辑：put接口\n    async save () {\n      let res\n      if (this.id) {\n        res = await this.$http.put(`/rest/vcards/${this.id}`, this.model)\n      } else {\n        res = await this.$http.post('/rest/vcards', this.model)\n      }\n      //eslint检查不能声明未引用的变量，所以加上这一句\n      this.model = res.data\n\n      // const res = await this.$http.post('categories',this.model)\n      // this.$http.post('categories', this.model)\n      this.$router.push('/vcards/list')\n      this.$message({\n        type: 'success',\n        message: '保存成功'\n      })\n    },\n    //根据id获取到当前记录详情，把名称填充到input中去\n    async fetch () {\n      const res = await this.$http.get(`/rest/vcards/${this.id}`)\n      this.model = res.data\n    },\n    //获取下拉列表中的上级分类\n    async fetchCharacter () {\n      const res = await this.$http.get(`/rest/heroes`)\n      this.character = Object.assign({}, this.character, res.data)\n    }\n  },\n  created () {\n    this.fetchCharacter()\n    //前面这个条件满足之后（url带id参数，即当前处于编辑页面），再执行第二个条件\n    this.id && this.fetch()\n  },\n  // async handleImageAdded (file, Editor, cursorLocation, resetUploader) {\n  //   // An example of using FormData\n  //   // NOTE: Your key could be different such as:\n  //   // formData.append('file', file)\n  //   //html里面自带的一个类，提交表单数据就可以用formdata。可以有表单数据和json数据\n  //   const formData = new FormData();\n  //   //注意名字是file（第一个），因为server端中upload.single('file')接收的是file，“file”要保持一致\n  //   formData.append(\"file\", file);\n  //   //res就是下面的result\n  //   const res = await this.$http.post(\"upload\", formData);\n  //   //  上面一句话就可以取代\n  //   //  axios({\n  //   //   url: \"https://fakeapi.yoursite.com/images\",\n  //   //   method: \"POST\",\n  //   //   data: formData\n  //   // })\n  //   //cursorLocation光标位置，插入一个参数，参数的位置\n  //   Editor.insertEmbed(cursorLocation, \"image\", res.data.url);\n  //   //重置上传器\n  //   resetUploader();\n  // }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n</style>"],"sourceRoot":"src/views"}]}