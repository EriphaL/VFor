{"remainingRequest":"/Users/eripha/Desktop/project/routine/admin/node_modules/babel-loader/lib/index.js!/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eripha/Desktop/project/routine/admin/src/views/AdEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eripha/Desktop/project/routine/admin/src/views/AdEdit.vue","mtime":1593006952780},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICAvL+WcqHJvdXRlcueahGpz5paH5Lu25Lit5aOw5piO77yM6L+Z5Liq6aG16Z2i5Y+v5Lul6Lef6Lev55Sx5bC95Y+v6IO955qE6Kej6ICmCiAgICAvL+aOpeaUtmlk6L+Z5Liq5Y+C5pWwCiAgICBpZDoge30KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtb2RlbDogewogICAgICAgIC8v6ZyA6KaB5Yqg56m65pWw57uE77yM5LiN54S255qE6K+d77yM5paw5bu65bm/5ZGK5L2N5pe254K55Ye75re75Yqg5Lya5pyJ5oql6ZSZCiAgICAgICAgaXRlbXM6IFtdCiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvL+WSjOWQjuerr+eahOaOpeWPo+S4gOagt++8jOeUqCBhc3luY+aWueW8j++8jOaKiuW8guatpeWbnuiwg+eahOaWueazleaNouaIkOWQjOatpe+8jOimgeeUqOeahOivnWFzeW5j5ZKMYXdhaXTmiJDlr7nkvb/nlKgKICAgIC8v5paw5bu65ZKM57yW6L6R55qEc2F2ZeaWueazleimgeWBmuadoeS7tuWIpOaWrQogICAgLy/mlrDlu7rvvJpwb3N05o6l5Y+jICDvvJvnvJbovpHvvJpwdXTmjqXlj6MKICAgIHNhdmU6IGZ1bmN0aW9uIHNhdmUoKSB7CiAgICAgIHZhciByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gc2F2ZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgaWYgKCF0aGlzLmlkKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcCh0aGlzLiRodHRwLnB1dCgiL3Jlc3QvYWRzLyIuY29uY2F0KHRoaXMuaWQpLCB0aGlzLm1vZGVsKSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKHRoaXMuJGh0dHAucG9zdCgnL3Jlc3QvYWRzJywgdGhpcy5tb2RlbCkpOwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgLy9lc2xpbnTmo4Dmn6XkuI3og73lo7DmmI7mnKrlvJXnlKjnmoTlj5jph4/vvIzmiYDku6XliqDkuIrov5nkuIDlj6UKICAgICAgICAgICAgICB0aGlzLm1vZGVsID0gcmVzLmRhdGE7IC8vIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuJGh0dHAucG9zdCgnYWRzJyx0aGlzLm1vZGVsKQogICAgICAgICAgICAgIC8vIHRoaXMuJGh0dHAucG9zdCgnYWRzJywgdGhpcy5tb2RlbCkKCiAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9hZHMvbGlzdCcpOwogICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgbWVzc2FnZTogJ+S/neWtmOaIkOWKnycKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIG51bGwsIHRoaXMpOwogICAgfSwKICAgIC8v5qC55o2uaWTojrflj5bliLDlvZPliY3orrDlvZXor6bmg4XvvIzmiorlkI3np7DloavlhYXliLBpbnB1dOS4reWOuwogICAgZmV0Y2g6IGZ1bmN0aW9uIGZldGNoKCkgewogICAgICB2YXIgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIGZldGNoJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcCh0aGlzLiRodHRwLmdldCgiL3Jlc3QvYWRzLyIuY29uY2F0KHRoaXMuaWQpKSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgLy8gdGhpcy5tb2RlbCA9IHJlcy5kYXRhCiAgICAgICAgICAgICAgdGhpcy5tb2RlbCA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMubW9kZWwsIHJlcy5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIG51bGwsIHRoaXMpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8v5YmN6Z2i6L+Z5Liq5p2h5Lu25ruh6Laz5LmL5ZCO77yIdXJs5bimaWTlj4LmlbDvvIzljbPlvZPliY3lpITkuo7nvJbovpHpobXpnaLvvInvvIzlho3miafooYznrKzkuozkuKrmnaHku7YKICAgIHRoaXMuaWQgJiYgdGhpcy5mZXRjaCgpOwogIH0KfTs="},{"version":3,"sources":["AdEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,eAAA;AACA,EAAA,KAAA,EAAA;AACA;AACA;AACA,IAAA,EAAA,EAAA;AAHA,GADA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AACA;AACA,QAAA,KAAA,EAAA;AAFA;AADA,KAAA;AAOA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA,IAAA,IAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMA,KAAA,EANA;AAAA;AAAA;AAAA;;AAAA;AAAA,8CAOA,KAAA,KAAA,CAAA,GAAA,qBAAA,KAAA,EAAA,GAAA,KAAA,KAAA,CAPA;;AAAA;AAOA,cAAA,GAPA;AAAA;AAAA;;AAAA;AAAA;AAAA,8CASA,KAAA,KAAA,CAAA,IAAA,CAAA,WAAA,EAAA,KAAA,KAAA,CATA;;AAAA;AASA,cAAA,GATA;;AAAA;AAWA;AACA,mBAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAZA,CAcA;AACA;;AACA,mBAAA,OAAA,CAAA,IAAA,CAAA,WAAA;AACA,mBAAA,QAAA,CAAA;AACA,gBAAA,IAAA,EAAA,SADA;AAEA,gBAAA,OAAA,EAAA;AAFA,eAAA;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA,IAAA,KAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAwBA,KAAA,KAAA,CAAA,GAAA,qBAAA,KAAA,EAAA,EAxBA;;AAAA;AAwBA,cAAA,GAxBA;AAyBA;AACA,mBAAA,KAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,KAAA,EAAA,GAAA,CAAA,IAAA,CAAA;;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAfA;AA6CA,EAAA,OA7CA,qBA6CA;AACA;AACA,SAAA,EAAA,IAAA,KAAA,KAAA,EAAA;AACA;AAhDA,CAAA","sourcesContent":["<template>\n  <!-- 分类创建及编辑页 -->\n  <div>\n    <!-- 如果url带id参数，就显示编辑分类，不带就显示新建分类 -->\n    <h1>{{id ? '编辑':'新建'}}广告位</h1>\n    <!-- 点击保存按钮提交需要触发submit的原生事件，prevent表示阻止提交，不要跳转页面，定义一个save方法，写在methods中。在这边添加 -->\n    <el-form @submit.native.prevent=\"save\">\n      <el-form-item label=\"名称\">\n        <el-input v-model=\"model.name\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"广告\">\n        <el-button type=\"text\" @click=\"model.items.push({})\">\n          <i class=\"el-icon-plus\"></i> 添加广告\n        </el-button>\n        <!-- 需要一个横向的排版 有技能名字和其对应的图标; flex-wrap:wrap表示换行-->\n        <el-row type=\"flex\" style=\"flex-wrap:wrap\">\n          <!-- i表示该循环的索引值 -->\n          <el-col :md=\"24\" v-for=\"(item,i) in model.items\" :key=\"i\" style=\"padding-right:20px;\">\n            <el-form-item label=\"跳转链接\">\n              <el-input v-model=\"item.url\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"图片\">\n              <!-- on-success成功的话显示赋值 -->\n              <el-upload\n                class=\"avatar-uploader\"\n                :action=\"$http.defaults.baseURL + '/upload'\"\n                :show-file-list=\"false\"\n                :on-success=\"res => $set(item,'image',res.url)\"\n              >\n                <!-- 如果有图片地址显示图片 -->\n                <img v-if=\"item.image\" :src=\"item.image\" class=\"avatar\" />\n                <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n              </el-upload>\n            </el-form-item>\n            <el-form-item>\n              <!-- 删除当前位置（索引index=i）的技能信息 -->\n              <el-button type=\"danger\" size=\"small\" @click=\"model.items.splice(i,1)\">删除</el-button>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" native-type=\"submit\">保存</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    //在router的js文件中声明，这个页面可以跟路由尽可能的解耦\n    //接收id这个参数\n    id: {}\n  },\n  data () {\n    return {\n      model: {\n        //需要加空数组，不然的话，新建广告位时点击添加会有报错\n        items: []\n      },\n\n    }\n  },\n  methods: {\n    //和后端的接口一样，用 async方式，把异步回调的方法换成同步，要用的话async和await成对使用\n    //新建和编辑的save方法要做条件判断\n    //新建：post接口  ；编辑：put接口\n    async save () {\n      let res\n      if (this.id) {\n        res = await this.$http.put(`/rest/ads/${this.id}`, this.model)\n      } else {\n        res = await this.$http.post('/rest/ads', this.model)\n      }\n      //eslint检查不能声明未引用的变量，所以加上这一句\n      this.model = res.data\n\n      // const res = await this.$http.post('ads',this.model)\n      // this.$http.post('ads', this.model)\n      this.$router.push('/ads/list')\n      this.$message({\n        type: 'success',\n        message: '保存成功'\n      })\n    },\n    //根据id获取到当前记录详情，把名称填充到input中去\n    async fetch () {\n      const res = await this.$http.get(`/rest/ads/${this.id}`)\n      // this.model = res.data\n      this.model = Object.assign({}, this.model, res.data)\n    },\n\n  },\n  created () {\n    //前面这个条件满足之后（url带id参数，即当前处于编辑页面），再执行第二个条件\n    this.id && this.fetch()\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n</style>"],"sourceRoot":"src/views"}]}