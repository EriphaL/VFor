{"remainingRequest":"/Users/eripha/Desktop/project/routine/admin/node_modules/babel-loader/lib/index.js!/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eripha/Desktop/project/routine/admin/src/views/Citys.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eripha/Desktop/project/routine/admin/src/views/Citys.vue","mtime":1593703352817},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Citys.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div ref=\"container\" class=\"svg-container\" align=\"center\">\n    <svg ref=\"svg\" id=\"svg\" :width=\"svgWidth\" :height=\"svgHeight\"\n    v-if=\"redrawToggle === true\">\n      <defs>\n        <marker\n          id=\"arrowId\"\n          viewBox=\"0 0 10 10\"\n          refX=\"1\"\n          refY=\"5\"\n          markerWidth=\"6\"\n          markerHeight=\"6\"\n          orient=\"auto\"\n        >\n          <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n        </marker>\n      </defs>\n    </svg>\n  </div>\n</template>\n<script>\n/*eslint-disable */\nimport * as d3 from \"d3\";\n\nexport default {\n  data: () => ({\n    res: {},\n    svgWidth: 0,\n    redrawToggle: true,\n\n    //   width:\n  }),\n  methods: {\n    async fetch() {\n      this.res = require(\"../assets/data/city.json\");\n    },\n    // 即响应式绘制\n    AddResizeListener() {\n      window.addEventListener(\"resize\", () => {\n        this.$data.redrawToggle = false;\n        setTimeout(() => {\n          this.$data.redrawToggle = true;\n          this.$data.svgWidth = this.$refs.container.offsetWidth * 0.8;\n          // 重新绘制\n          this.chart();\n        }, 0);\n      });\n      //   console.log([...new Set(this.edges.map(d => d.data.time))].length);\n    },\n    chart() {\n      // 无效\n      // this.svgWidth = this.$refs.container.offsetWidth *0.9\n      const data = this.res;\n      const width = this.svgWidth;\n      const height = this.svgHeight;\n      const margin = { top: 24, right: 10, bottom: 34, left: 40 };\n      const svg = d3.select(\"#svg\");\n      svg.attr(\"viewBox\", [0, 0, this.svgWidth, this.svgHeight]);\n      // svg.attr(\"viewBox\",[0,0,800,500])\n\n      const x = d3\n        .scaleLog()\n        .domain(\n          padLog(d3.extent(data.flatMap(d => [d.POP_1980, d.POP_2015])), 0.1)\n        )\n        .rangeRound([margin.left, width - margin.right]);\n      const y = d3\n        .scaleLinear()\n        .domain(\n          padLinear(\n            d3.extent(data.flatMap(d => [d.R90_10_1980, d.R90_10_2015])),\n            0.1\n          )\n        )\n        .rangeRound([height - margin.bottom, margin.top]);\n\n      function padLinear([x0, x1], k) {\n        const dx = ((x1 - x0) * k) / 2;\n        return [x0 - dx, x1 + dx];\n      }\n      function padLog(x, k) {\n        return padLinear(x.map(Math.log), k).map(Math.exp);\n      }\n\n      const endColor = d3.schemeCategory10[3];\n\n      const startColor = d3.schemeCategory10[1];\n\n      const grid = g =>\n        g\n          .attr(\"stroke\", \"currentColor\")\n          .attr(\"stroke-opacity\", 0.1)\n          .call(g =>\n            g\n              .append(\"g\")\n              .selectAll(\"line\")\n              .data(x.ticks())\n              .join(\"line\")\n              .attr(\"x1\", d => 0.5 + x(d))\n              .attr(\"x2\", d => 0.5 + x(d))\n              .attr(\"y1\", margin.top)\n              .attr(\"y2\", height - margin.bottom)\n          )\n          .call(g =>\n            g\n              .append(\"g\")\n              .selectAll(\"line\")\n              .data(y.ticks())\n              .join(\"line\")\n              .attr(\"y1\", d => 0.5 + y(d))\n              .attr(\"y2\", d => 0.5 + y(d))\n              .attr(\"x1\", margin.left)\n              .attr(\"x2\", width - margin.right)\n          );\n\n      const xAxis = g =>\n        g\n          .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n          .call(d3.axisBottom(x).ticks(width / 80, \".1s\"))\n          .call(g => g.select(\".domain\").remove())\n          .call(g =>\n            g\n              .append(\"text\")\n              .attr(\"x\", width)\n              .attr(\"y\", margin.bottom - 4)\n              .attr(\"fill\", \"currentColor\")\n              .attr(\"text-anchor\", \"end\")\n              .text(data.x)\n          );\n\n      function arc(x1, y1, x2, y2) {\n        const r = Math.hypot(x1 - x2, y1 - y2) * 2;\n        return `M${x1},${y1} A${r},${r} 0,0,1 ${x2},${y2}`;\n      }\n\n      const yAxis = g =>\n        g\n          .attr(\"transform\", `translate(${margin.left},0)`)\n          .call(d3.axisLeft(y))\n          .call(g => g.select(\".domain\").remove())\n          .call(g =>\n            g\n              .append(\"text\")\n              .attr(\"x\", -margin.left)\n              .attr(\"y\", 10)\n              .attr(\"fill\", \"currentColor\")\n              .attr(\"text-anchor\", \"start\")\n              .text(data.y)\n          );\n\n      svg.append(\"g\").call(grid);\n\n      svg.append(\"g\").call(xAxis);\n\n      svg.append(\"g\").call(yAxis);\n\n      //   箭头\n      const arrowId = \"arrowID\";\n      const gradientIds = data.map(() => {\n        //   console.log(DOM.uid(\"gradient\"));\n        //   return DOM.uid(\"gradient\");\n        return;\n      });\n\n      const defs = svg.append(\"defs\");\n\n      //   const arrowMarker =\n      // defs.append(\"marker\")\n      // .attr(\"id\",arrowId)\n      // .attr(\"markerUnits\",\"strokeWidth\")\n      // .attr(\"markerWidth\",\"8\")\n      // .attr(\"markerHeight\",\"8\")\n      // .attr(\"viewBox\",\"0 0 12 12\")\n      // .attr(\"refX\",\"13\")\n      // .attr(\"refY\",\"6\")\n      // .attr(\"orient\",\"auto\");\n\n      // defs\n      //   .append(\"marker\")\n      //   .attr(\"id\", arrowId)\n      //   // .attr(\"id\",arrowId.id)\n      //   .attr(\"markerHeight\", 10)\n      //   .attr(\"markerWidth\", 10)\n      //   .attr(\"refX\", 5)\n      //   .attr(\"refY\", 2.5)\n      //   .attr(\"orient\", \"auto\")\n\n      //   // 箭头形状填充\n      //   .append(\"path\")\n      //   .attr(\"fill\", endColor)\n      //   .attr(\"d\", \"M0,0v5l7,-2.5Z\");\n\n      //   var marker\n\n      svg\n        .append(\"g\")\n        .attr(\"fill\", \"none\")\n        .selectAll(\"path\")\n        .data(data)\n        .join(\"path\")\n        .attr(\"stroke\", \"black\")\n        .attr(\"marker-end\", \"url(#arrowId)\")\n        .attr(\"d\", d => {\n          //   console.log();\n          return arc(\n            x(d.POP_1980),\n            y(d.R90_10_1980),\n            // 终点坐标\n            x(d.POP_2015),\n            y(d.R90_10_2015)\n          );\n        });\n      // 起始原点\n      svg\n        .append(\"g\")\n        .attr(\"fill\", \"currentColor\")\n        .selectAll(\"circle\")\n        .data(data)\n        .join(\"circle\")\n        .attr(\"r\", 1.75)\n        .attr(\"cx\", d => x(d.POP_1980))\n        .attr(\"cy\", d => y(d.R90_10_1980));\n\n      svg\n        .append(\"g\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", 10)\n        .attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke-width\", 4)\n        .selectAll(\"text\")\n        .data(data.filter(d => d.highlight))\n        .join(\"text\")\n        .attr(\"dy\", d => (d.R90_10_1980 > d.R90_10_2015 ? \"1.2em\" : \"-0.5em\"))\n        .attr(\"x\", d => x(d.POP_2015))\n        .attr(\"y\", d => y(d.R90_10_2015))\n        .text(d => d.nyt_display)\n        .call(text => text.clone(true))\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"white\");\n\n      //   svg\n      //     .append(\"defs\")\n      defs\n        .selectAll(\"linearGradient\")\n        .data(data)\n        .join(\"linearGradient\")\n        .attr(\"id\", (d, i) => gradientIds[i].id)\n        // .attr(\"id\",\"gradients\")\n        .attr(\"gradientUnits\", \"userSpaceOnUse\")\n        .attr(\"x1\", d => x(d.POP_1980))\n        .attr(\"x2\", d => x(d.POP_2015))\n        .attr(\"y1\", d => y(d.R90_10_1980))\n        .attr(\"y2\", d => y(d.R90_10_2015))\n        .call(g =>\n          g\n            .append(\"stop\")\n            .attr(\"stop-color\", startColor)\n            .attr(\"stop-opacity\", 0.5)\n        )\n        .call(g =>\n          g\n            .append(\"stop\")\n            .attr(\"offset\", \"100%\")\n            .attr(\"stop-color\", endColor)\n        );\n\n      return svg.node();\n    }\n  },\n  created() {\n    this.fetch();\n    console.log(this.svgViewBox);//can not fetch\n    // d3.json('../assets/data/city.json').then(d=>\n    // console.log(d)\n    // )\n  },\n  mounted() {\n    this.svgWidth = this.$refs.container.offsetWidth * 0.9;\n    //   console.log(this.svgWidth);\n    // this.chart();\n\n    this.AddResizeListener()\n    // this.chart();\n  },\n  updated() {\n    // this.svgWidth = this.$refs.container.offsetWidth * 0.9;\n    // this.chart();\n  },\n  computed: {\n    svgViewBox() {\n      //   const { width, heihgt } = this.svgBox;\n      const w = this.$refs.svg.offsetWidth * 0.9;\n      const h = w / 1.61803398875;\n      const svgBox = {\n        'width': w,\n        'height': h\n      };\n      //   return [0, 0, w, h];\n      return svgBox;\n    },\n    xScale() {\n      //   console.log(this.xValue);\n      return d3\n        .scaleBand()\n        .domain([...new Set(this.edges.map(d => d.data.time))])\n        .range([0, this.svgWidth - 2 * this.margin.left]);\n      // .nice();\n    },\n    // 通过线性比例尺自动生成\n    yScale() {\n      return d3\n        .scaleBand()\n        .domain(\n          this.nodes.map(d => {\n            // console.log(d);\n            return d.data.id;\n          })\n        )\n        .range([0, this.svgHeight - this.margin.bottom]);\n      // .padding(0);无效\n    },\n    // svgWidth(){return this.$refs.svg.offsetWidth*0.9},\n    svgHeight() {\n      return this.svgWidth / 1.61803398875; // 黄金比例\n    }\n  }\n};\n/*eslint-enable */\n</script>"],"sourceRoot":"src/views"}]}