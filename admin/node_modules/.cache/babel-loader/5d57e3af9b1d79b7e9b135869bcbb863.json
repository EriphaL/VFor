{"remainingRequest":"/Users/eripha/Desktop/project/routine/admin/node_modules/babel-loader/lib/index.js!/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eripha/Desktop/project/routine/admin/src/views/ReD3.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eripha/Desktop/project/routine/admin/src/views/ReD3.vue","mtime":1593787224368},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ReD3.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div ref=\"container\" class=\"svg-container\" align=\"center\">\n    <svg ref=\"svg\" id=\"svg\">\n      <defs>\n        <marker\n          id=\"arrowId\"\n          viewBox=\"0 0 10 10\"\n          refX=\"1\"\n          refY=\"5\"\n          markerWidth=\"6\"\n          markerHeight=\"6\"\n          orient=\"auto\"\n        >\n          <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n        </marker>\n      </defs>\n    </svg>\n  </div>\n</template>\n<script>\n/*eslint-disable */\nimport * as d3 from \"d3\";\n\nexport default {\n  data: () => ({\n    nodes: [\n      { data: { name: \"张三\", id: \"zhangsan\" } },\n      { data: { name: \"李四\", id: \"lisi\" } },\n      { data: { name: \"王五\", id: \"wangwu\" } }\n    ],\n    edges: [\n      { data: { time: \"20200501\" }, source: \"zhangsan\", target: \"lisi\" },\n      { data: { time: \"20200502\" }, source: \"wangwu\", target: \"lisi\" },\n      { data: { time: \"20200502\" }, source: \"lisi\", target: \"wangwu\" },\n      { data: { time: \"20200505\" }, source: \"zhangsan\", target: \"wangwu\" }\n    ],\n    margin: { top: 24, right: 10, bottom: 34, left: 40 },\n\n    res: {},\n    svgWidth: 0,\n    toggle: true,\n    svgBox: {}\n    //   width:\n  }),\n  methods: {\n    async fetch() {\n      this.res = require(\"../assets/data/city.json\");\n    },\n    // AddResizeListener() {\n    //   window.addEventListener(\"resize\", () => {\n    //     this.$data.toggle = false;\n    //     setTimeout(() => {\n    //       this.$data.toggle = true;\n    //       this.$data.svgWidth = this.$refs.container.offsetWidth * 0.9;\n    //       this.render();\n    //     }, 300);\n    //   });\n    // },\n    getAxis() {\n      const width = this.svgWidth;\n      const height = this.svgHeight;\n      const margin = this.margin;\n      const svg = d3.select(\"#svg\");\n      const x = this.xScale;\n      const y = this.yScale;\n      const yLabel = this.nodes.map(d => d.data.name);\n      //   console.log();\n\n      const xAxis = g =>\n        g\n          .attr(\"id\", \"xAxis\")\n          .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n          .call(\n            d3.axisBottom(x).ticks(\n              [\n                ...new Set(\n                  this.edges.map(d => {\n                    return d.data.time;\n                  })\n                )\n              ].length\n            )\n          )\n          .call(g => g.select(\".domain\").remove())\n          .call(g =>\n            g\n              .append(\"text\")\n              .attr(\"x\", width)\n              .attr(\"y\", margin.bottom - 4)\n              .attr(\"fill\", \"currentColor\")\n              .attr(\"text-anchor\", \"end\")\n          );\n\n      const yAxis = g =>\n        g\n          .attr(\"id\", \"yAxis\")\n          .attr(\"transform\", `translate(${margin.left},0)`)\n          .call(\n            d3\n              .axisLeft(y)\n              .tickFormat(d => {\n                for (let el of this.nodes) {\n                  if (el.data.id == d) return el.data.name;\n                }\n              })\n              .ticks(this.nodes.length)\n              //   .tickValues(yLabel)\n              .tickSize(-width)\n          );\n\n      svg.append(\"g\").call(xAxis);\n      svg.append(\"g\").call(yAxis);\n    },\n    getPaint() {\n      const width = this.svgWidth;\n      const height = this.svgHeight;\n      const margin = this.margin;\n      const svg = d3.select(\"#svg\");\n      const x = this.xScale;\n      const y = this.yScale;\n\n      const location = this.location;\n\n      const endColor = d3.schemeCategory10[3];\n      const startColor = d3.schemeCategory10[1];\n\n      function arc(x1, y1, x2, y2) {\n        return `M${x1},${y1} ${x2},${y2}`;\n      }\n      // a = {\n      //     b: 11\n      // }\n\n      // a.b = 12\n\n      // a = {\n      //     b: 13\n      // }\n      // Object.defineProperty\n      //\n      // watch: {\n      //     a () {\n      //         console.log('change ')\n      //     }\n      // }\n      // watch: {\n      //     a: {\n      //         handler () {\n      //             console.log('change')\n      //         },\n      //         deep: true\n      //     }\n      // }\n      // 内部点线绘制画布起始坐标点平移\n      const transX =\n        document.getElementById(\"xAxis\").childNodes[0].transform.baseVal[0]\n          .matrix.e - margin.left;\n      const transY =\n        document.getElementById(\"yAxis\").getElementsByTagName(\"g\")[0].transform\n          .baseVal[0].matrix.f - margin.top;\n      const paintG = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(${transX},${transY})`);\n      // 线段带箭头\n      paintG\n        .attr(\"fill\", \"none\")\n        .selectAll(\"path\")\n        .data(location)\n        .join(\"path\")\n        .attr(\"stroke\", \"black\")\n        .attr(\"marker-end\", \"url(#arrowId)\")\n        .attr(\"d\", d => {\n          return arc(d.x1, d.y1, d.x2, d.y2);\n        });\n      // 起始原点\n      paintG\n        .attr(\"fill\", \"currentColor\")\n        .selectAll(\"circle\")\n        .data(location)\n        .join(\"circle\")\n        .attr(\"r\", 1.75)\n        .attr(\"cx\", d => d.x1)\n        .attr(\"cy\", d => d.y1);\n    },\n    render() {\n      d3.select(\"#svg\").attr(\"viewBox\", [0, 0, this.svgWidth, this.svgHeight]);\n      //   渲染坐标轴\n      this.getAxis();\n      //   绘制线点\n      this.getPaint();\n    }\n  },\n  created() {\n    this.fetch();\n  },\n  mounted() {\n    this.svgWidth = this.$refs.container.offsetWidth * 0.9;\n    // this.AddResizeListener();\n    this.render();\n  },\n  computed: {\n    // svgBox() {\n    //   let w = this.$refs.container.offsetWidth * 0.9;\n    //   let h = w / 1.6;\n    //   this.svgBox = {\n    //     width: w,\n    //     height: h\n    //   };\n    //   return [0, 0, w, h];\n    // },\n    // getTransX() {\n    //   return document.getElementById(\"xAxis\").childNodes[0].transform.baseVal[0]\n    //     .matrix.e;\n    // },\n    // getTransY() {\n    //   return document.getElementById(\"yAxis\").getElementsByTagName(\"g\")[0]\n    //     .transform.baseVal[0].matrix.f;\n    // },\n    xScale() {\n      return d3\n        .scaleBand()\n        .domain([...new Set(this.edges.map(d => d.data.time))])\n        .range([this.margin.left, this.svgWidth - this.margin.right]);\n    },\n    yScale() {\n      return d3\n        .scaleBand()\n        .domain(\n          this.nodes.map(d => {\n            return d.data.id;\n          })\n        )\n        .range([this.margin.top, this.svgHeight - this.margin.bottom]);\n    },\n    svgHeight() {\n      return this.svgWidth / 1.61803398875; // 黄金比例\n    },\n    location() {\n      // 找到每对{x1: 168.93333333333337, y1: 219.10822973227653, x2: 168.93333333333337, y2: 109.55411486613826}\n      // 起始点和结束点\n      let getX = this.edges.map(d => this.xScale(d.data.time));\n      let getY = this.edges.map(d => this.yScale(d.source));\n      const start = [];\n      for (let i = 0; i < getX.length; i++) {\n        start.push({ x1: getX[i], y1: getY[i] });\n      }\n      const end = [];\n      const location = [];\n      getY = this.edges.map(d => this.yScale(d.target));\n      for (let i = 0; i < getX.length; i++) {\n        end[i] = { x2: getX[i], y2: getY[i] };\n        let cur = Object.assign(start[i], end[i]);\n        location.push(cur);\n      }\n      return location;\n    }\n  }\n};\n/*eslint-enable */\n</script>"],"sourceRoot":"src/views"}]}