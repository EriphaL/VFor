{"remainingRequest":"/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eripha/Desktop/project/routine/admin/src/views/CategoryEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eripha/Desktop/project/routine/admin/src/views/CategoryEdit.vue","mtime":1593354990543},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgLy/lnKhyb3V0ZXLnmoRqc+aWh+S7tuS4reWjsOaYju+8jOi/meS4qumhtemdouWPr+S7pei3n+i3r+eUseWwveWPr+iDveeahOino+iApgogICAgLy/mjqXmlLZpZOi/meS4quWPguaVsAogICAgaWQ6IHt9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbW9kZWw6IHt9LAogICAgICBwYXJlbnRzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8v5ZKM5ZCO56uv55qE5o6l5Y+j5LiA5qC377yM55SoIGFzeW5j5pa55byP77yM5oqK5byC5q2l5Zue6LCD55qE5pa55rOV5o2i5oiQ5ZCM5q2l77yM6KaB55So55qE6K+dYXN5bmPlkoxhd2FpdOaIkOWvueS9v+eUqAogICAgLy/mlrDlu7rlkoznvJbovpHnmoRzYXZl5pa55rOV6KaB5YGa5p2h5Lu25Yik5patCiAgICAvL+aWsOW7uu+8mnBvc3TmjqXlj6MgIO+8m+e8lui+ke+8mnB1dOaOpeWPowogICAgYXN5bmMgc2F2ZSgpIHsKICAgICAgLy8gbGV0IHJlczsKICAgICAgLy8gaWYgKHRoaXMuaWQpIHsKICAgICAgLy8gICByZXMgPSBhd2FpdCB0aGlzLiRodHRwLnB1dChgL3Jlc3QvY2F0ZWdvcmllcy8ke3RoaXMuaWR9YCwgdGhpcy5tb2RlbCk7CiAgICAgIC8vIH0gZWxzZSB7CiAgICAgIC8vICAgcmVzID0gYXdhaXQgdGhpcy4kaHR0cC5wb3N0KCIvcmVzdC9jYXRlZ29yaWVzIiwgdGhpcy5tb2RlbCk7CiAgICAgIC8vIH0KCiAgICAgIGxldCByZXMgPSBhd2FpdCB0aGlzLmlkID8gdGhpcy4kaHR0cC5wdXQoYC9yZXN0L2NhdGVnb3JpZXMvJHt0aGlzLmlkfWAsIHRoaXMubW9kZWwpIDogdGhpcy4kaHR0cC5wb3N0KCIvcmVzdC9jYXRlZ29yaWVzIiwgdGhpcy5tb2RlbCkKICAgICAgLy9lc2xpbnTmo4Dmn6XkuI3og73lo7DmmI7mnKrlvJXnlKjnmoTlj5jph4/vvIzmiYDku6XliqDkuIrov5nkuIDlj6UKICAgICAgdGhpcy5tb2RlbCA9IHJlcy5kYXRhOwoKICAgICAgLy8gY29uc3QgcmVzID0gYXdhaXQgdGhpcy4kaHR0cC5wb3N0KCdjYXRlZ29yaWVzJyx0aGlzLm1vZGVsKQogICAgICAvLyB0aGlzLiRodHRwLnBvc3QoJ2NhdGVnb3JpZXMnLCB0aGlzLm1vZGVsKQogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiL2NhdGVnb3JpZXMvbGlzdCIpOwogICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgbWVzc2FnZTogIuS/neWtmOaIkOWKnyIKICAgICAgfSk7CiAgICB9LAogICAgLy/moLnmja5pZOiOt+WPluWIsOW9k+WJjeiusOW9leivpuaDhe+8jOaKiuWQjeensOWhq+WFheWIsGlucHV05Lit5Y67CiAgICBhc3luYyBmZXRjaCgpIHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoYC9yZXN0L2NhdGVnb3JpZXMvJHt0aGlzLmlkfWApOwogICAgICB0aGlzLm1vZGVsID0gcmVzLmRhdGE7CiAgICB9LAogICAgLy/ojrflj5bkuIvmi4nliJfooajkuK3nmoTkuIrnuqfliIbnsbsKICAgIGFzeW5jIGZldGNoUGFyZW50cygpIHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoYC9yZXN0L2NhdGVnb3JpZXNgKTsKICAgICAgdGhpcy5wYXJlbnRzID0gcmVzLmRhdGE7CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5mZXRjaFBhcmVudHMoKTsKICAgIC8v5YmN6Z2i6L+Z5Liq5p2h5Lu25ruh6Laz5LmL5ZCO77yIdXJs5bimaWTlj4LmlbDvvIzljbPlvZPliY3lpITkuo7nvJbovpHpobXpnaLvvInvvIzlho3miafooYznrKzkuozkuKrmnaHku7YKICAgIHRoaXMuaWQgJiYgdGhpcy5mZXRjaCgpOwogIH0KfTsK"},{"version":3,"sources":["CategoryEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CategoryEdit.vue","sourceRoot":"src/views","sourcesContent":["\n<template>\n  <!-- 分类创建及编辑页 -->\n  <el-card class=\"box-card\">\n    <div slot=\"header\" class=\"clearfix\">\n      <!-- 如果url带id参数，就显示编辑分类，不带就显示新建分类 -->\n      <h1>{{id ? '编辑':'新建'}}分类</h1>\n    </div>\n    <div class=\"text item\">\n      <!-- 点击保存按钮提交需要触发submit的原生事件，prevent表示阻止提交，不要跳转页面，定义一个save方法，写在methods中。在这边添加 -->\n      <el-form label-width=\"80px\" label-position=\"left\" @submit.native.prevent=\"save\">\n        <el-form-item label=\"上级分类\">\n          <el-select v-model=\"model.parent\">\n            <!-- lable决定选项显示什么内容，value决定点击它时真正存的是什么内容 -->\n            <el-option v-for=\"item in parents\" :key=\"item._id\" :label=\"item.name\" :value=\"item._id\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"标题\">\n          <el-input v-model=\"model.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"路径\">\n          <el-input v-model=\"model.path\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" native-type=\"submit\">保存</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </el-card>\n</template>\n\n<script>\nexport default {\n  props: {\n    //在router的js文件中声明，这个页面可以跟路由尽可能的解耦\n    //接收id这个参数\n    id: {}\n  },\n  data() {\n    return {\n      model: {},\n      parents: []\n    };\n  },\n  methods: {\n    //和后端的接口一样，用 async方式，把异步回调的方法换成同步，要用的话async和await成对使用\n    //新建和编辑的save方法要做条件判断\n    //新建：post接口  ；编辑：put接口\n    async save() {\n      // let res;\n      // if (this.id) {\n      //   res = await this.$http.put(`/rest/categories/${this.id}`, this.model);\n      // } else {\n      //   res = await this.$http.post(\"/rest/categories\", this.model);\n      // }\n\n      let res = await this.id ? this.$http.put(`/rest/categories/${this.id}`, this.model) : this.$http.post(\"/rest/categories\", this.model)\n      //eslint检查不能声明未引用的变量，所以加上这一句\n      this.model = res.data;\n\n      // const res = await this.$http.post('categories',this.model)\n      // this.$http.post('categories', this.model)\n      this.$router.push(\"/categories/list\");\n      this.$message({\n        type: \"success\",\n        message: \"保存成功\"\n      });\n    },\n    //根据id获取到当前记录详情，把名称填充到input中去\n    async fetch() {\n      const res = await this.$http.get(`/rest/categories/${this.id}`);\n      this.model = res.data;\n    },\n    //获取下拉列表中的上级分类\n    async fetchParents() {\n      const res = await this.$http.get(`/rest/categories`);\n      this.parents = res.data;\n    }\n  },\n  created() {\n    this.fetchParents();\n    //前面这个条件满足之后（url带id参数，即当前处于编辑页面），再执行第二个条件\n    this.id && this.fetch();\n  }\n};\n</script>\n\n<style scoped>\nh1 {\n  line-height: normal;\n}\n/* .el-input{\n  width: 50vw;\n} */\n.text {\n  font-size: 14px;\n}\n\n.item {\n  margin-bottom: 18px;\n}\n\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n}\n.clearfix:after {\n  clear: both;\n}\n\n.box-card {\n  width: 480px;\n  margin: 0 auto;\n}\n</style>"]}]}