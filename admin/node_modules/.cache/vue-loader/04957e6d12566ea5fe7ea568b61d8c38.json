{"remainingRequest":"/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eripha/Desktop/project/routine/admin/src/views/AdEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eripha/Desktop/project/routine/admin/src/views/AdEdit.vue","mtime":1593006952780},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgLy/lnKhyb3V0ZXLnmoRqc+aWh+S7tuS4reWjsOaYju+8jOi/meS4qumhtemdouWPr+S7pei3n+i3r+eUseWwveWPr+iDveeahOino+iApgogICAgLy/mjqXmlLZpZOi/meS4quWPguaVsAogICAgaWQ6IHt9CiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIG1vZGVsOiB7CiAgICAgICAgLy/pnIDopoHliqDnqbrmlbDnu4TvvIzkuI3nhLbnmoTor53vvIzmlrDlu7rlub/lkYrkvY3ml7bngrnlh7vmt7vliqDkvJrmnInmiqXplJkKICAgICAgICBpdGVtczogW10KICAgICAgfSwKCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvL+WSjOWQjuerr+eahOaOpeWPo+S4gOagt++8jOeUqCBhc3luY+aWueW8j++8jOaKiuW8guatpeWbnuiwg+eahOaWueazleaNouaIkOWQjOatpe+8jOimgeeUqOeahOivnWFzeW5j5ZKMYXdhaXTmiJDlr7nkvb/nlKgKICAgIC8v5paw5bu65ZKM57yW6L6R55qEc2F2ZeaWueazleimgeWBmuadoeS7tuWIpOaWrQogICAgLy/mlrDlu7rvvJpwb3N05o6l5Y+jICDvvJvnvJbovpHvvJpwdXTmjqXlj6MKICAgIGFzeW5jIHNhdmUgKCkgewogICAgICBsZXQgcmVzCiAgICAgIGlmICh0aGlzLmlkKSB7CiAgICAgICAgcmVzID0gYXdhaXQgdGhpcy4kaHR0cC5wdXQoYC9yZXN0L2Fkcy8ke3RoaXMuaWR9YCwgdGhpcy5tb2RlbCkKICAgICAgfSBlbHNlIHsKICAgICAgICByZXMgPSBhd2FpdCB0aGlzLiRodHRwLnBvc3QoJy9yZXN0L2FkcycsIHRoaXMubW9kZWwpCiAgICAgIH0KICAgICAgLy9lc2xpbnTmo4Dmn6XkuI3og73lo7DmmI7mnKrlvJXnlKjnmoTlj5jph4/vvIzmiYDku6XliqDkuIrov5nkuIDlj6UKICAgICAgdGhpcy5tb2RlbCA9IHJlcy5kYXRhCgogICAgICAvLyBjb25zdCByZXMgPSBhd2FpdCB0aGlzLiRodHRwLnBvc3QoJ2FkcycsdGhpcy5tb2RlbCkKICAgICAgLy8gdGhpcy4kaHR0cC5wb3N0KCdhZHMnLCB0aGlzLm1vZGVsKQogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2Fkcy9saXN0JykKICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgIG1lc3NhZ2U6ICfkv53lrZjmiJDlip8nCiAgICAgIH0pCiAgICB9LAogICAgLy/moLnmja5pZOiOt+WPluWIsOW9k+WJjeiusOW9leivpuaDhe+8jOaKiuWQjeensOWhq+WFheWIsGlucHV05Lit5Y67CiAgICBhc3luYyBmZXRjaCAoKSB7CiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KGAvcmVzdC9hZHMvJHt0aGlzLmlkfWApCiAgICAgIC8vIHRoaXMubW9kZWwgPSByZXMuZGF0YQogICAgICB0aGlzLm1vZGVsID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5tb2RlbCwgcmVzLmRhdGEpCiAgICB9LAoKICB9LAogIGNyZWF0ZWQgKCkgewogICAgLy/liY3pnaLov5nkuKrmnaHku7bmu6HotrPkuYvlkI7vvIh1cmzluKZpZOWPguaVsO+8jOWNs+W9k+WJjeWkhOS6jue8lui+kemhtemdou+8ie+8jOWGjeaJp+ihjOesrOS6jOS4quadoeS7tgogICAgdGhpcy5pZCAmJiB0aGlzLmZldGNoKCkKICB9LAp9Cg=="},{"version":3,"sources":["AdEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"AdEdit.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <!-- 分类创建及编辑页 -->\n  <div>\n    <!-- 如果url带id参数，就显示编辑分类，不带就显示新建分类 -->\n    <h1>{{id ? '编辑':'新建'}}广告位</h1>\n    <!-- 点击保存按钮提交需要触发submit的原生事件，prevent表示阻止提交，不要跳转页面，定义一个save方法，写在methods中。在这边添加 -->\n    <el-form @submit.native.prevent=\"save\">\n      <el-form-item label=\"名称\">\n        <el-input v-model=\"model.name\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"广告\">\n        <el-button type=\"text\" @click=\"model.items.push({})\">\n          <i class=\"el-icon-plus\"></i> 添加广告\n        </el-button>\n        <!-- 需要一个横向的排版 有技能名字和其对应的图标; flex-wrap:wrap表示换行-->\n        <el-row type=\"flex\" style=\"flex-wrap:wrap\">\n          <!-- i表示该循环的索引值 -->\n          <el-col :md=\"24\" v-for=\"(item,i) in model.items\" :key=\"i\" style=\"padding-right:20px;\">\n            <el-form-item label=\"跳转链接\">\n              <el-input v-model=\"item.url\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"图片\">\n              <!-- on-success成功的话显示赋值 -->\n              <el-upload\n                class=\"avatar-uploader\"\n                :action=\"$http.defaults.baseURL + '/upload'\"\n                :show-file-list=\"false\"\n                :on-success=\"res => $set(item,'image',res.url)\"\n              >\n                <!-- 如果有图片地址显示图片 -->\n                <img v-if=\"item.image\" :src=\"item.image\" class=\"avatar\" />\n                <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n              </el-upload>\n            </el-form-item>\n            <el-form-item>\n              <!-- 删除当前位置（索引index=i）的技能信息 -->\n              <el-button type=\"danger\" size=\"small\" @click=\"model.items.splice(i,1)\">删除</el-button>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" native-type=\"submit\">保存</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    //在router的js文件中声明，这个页面可以跟路由尽可能的解耦\n    //接收id这个参数\n    id: {}\n  },\n  data () {\n    return {\n      model: {\n        //需要加空数组，不然的话，新建广告位时点击添加会有报错\n        items: []\n      },\n\n    }\n  },\n  methods: {\n    //和后端的接口一样，用 async方式，把异步回调的方法换成同步，要用的话async和await成对使用\n    //新建和编辑的save方法要做条件判断\n    //新建：post接口  ；编辑：put接口\n    async save () {\n      let res\n      if (this.id) {\n        res = await this.$http.put(`/rest/ads/${this.id}`, this.model)\n      } else {\n        res = await this.$http.post('/rest/ads', this.model)\n      }\n      //eslint检查不能声明未引用的变量，所以加上这一句\n      this.model = res.data\n\n      // const res = await this.$http.post('ads',this.model)\n      // this.$http.post('ads', this.model)\n      this.$router.push('/ads/list')\n      this.$message({\n        type: 'success',\n        message: '保存成功'\n      })\n    },\n    //根据id获取到当前记录详情，把名称填充到input中去\n    async fetch () {\n      const res = await this.$http.get(`/rest/ads/${this.id}`)\n      // this.model = res.data\n      this.model = Object.assign({}, this.model, res.data)\n    },\n\n  },\n  created () {\n    //前面这个条件满足之后（url带id参数，即当前处于编辑页面），再执行第二个条件\n    this.id && this.fetch()\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n</style>"]}]}