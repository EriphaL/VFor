{"remainingRequest":"/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eripha/Desktop/project/routine/admin/src/views/ArticleEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eripha/Desktop/project/routine/admin/src/views/ArticleEdit.vue","mtime":1593006952781},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIOino+aehOeahOi1i+WAvOaWueazlQppbXBvcnQgeyBWdWVFZGl0b3IgfSBmcm9tICJ2dWUyLWVkaXRvciI7CgpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIC8v5Zyocm91dGVy55qEanPmlofku7bkuK3lo7DmmI7vvIzov5nkuKrpobXpnaLlj6/ku6Xot5/ot6/nlLHlsL3lj6/og73nmoTop6PogKYKICAgIC8v5o6l5pS2aWTov5nkuKrlj4LmlbAKICAgIGlkOiB7fQogIH0sCiAgY29tcG9uZW50czogewogICAgVnVlRWRpdG9yCiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIG1vZGVsOiB7fSwKICAgICAgY2F0ZWdvcmllczogW10sCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvL+WSjOWQjuerr+eahOaOpeWPo+S4gOagt++8jOeUqCBhc3luY+aWueW8j++8jOaKiuW8guatpeWbnuiwg+eahOaWueazleaNouaIkOWQjOatpe+8jOimgeeUqOeahOivnWFzeW5j5ZKMYXdhaXTmiJDlr7nkvb/nlKgKICAgIC8v5paw5bu65ZKM57yW6L6R55qEc2F2ZeaWueazleimgeWBmuadoeS7tuWIpOaWrQogICAgLy/mlrDlu7rvvJpwb3N05o6l5Y+jICDvvJvnvJbovpHvvJpwdXTmjqXlj6MKICAgIGFzeW5jIHNhdmUgKCkgewogICAgICBsZXQgcmVzCiAgICAgIGlmICh0aGlzLmlkKSB7CiAgICAgICAgcmVzID0gYXdhaXQgdGhpcy4kaHR0cC5wdXQoYC9yZXN0L2FydGljbGVzLyR7dGhpcy5pZH1gLCB0aGlzLm1vZGVsKQogICAgICB9IGVsc2UgewogICAgICAgIHJlcyA9IGF3YWl0IHRoaXMuJGh0dHAucG9zdCgnL3Jlc3QvYXJ0aWNsZXMnLCB0aGlzLm1vZGVsKQogICAgICB9CiAgICAgIC8vZXNsaW505qOA5p+l5LiN6IO95aOw5piO5pyq5byV55So55qE5Y+Y6YeP77yM5omA5Lul5Yqg5LiK6L+Z5LiA5Y+lCiAgICAgIHRoaXMubW9kZWwgPSByZXMuZGF0YQoKICAgICAgLy8gY29uc3QgcmVzID0gYXdhaXQgdGhpcy4kaHR0cC5wb3N0KCdjYXRlZ29yaWVzJyx0aGlzLm1vZGVsKQogICAgICAvLyB0aGlzLiRodHRwLnBvc3QoJ2NhdGVnb3JpZXMnLCB0aGlzLm1vZGVsKQogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2FydGljbGVzL2xpc3QnKQogICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgbWVzc2FnZTogJ+S/neWtmOaIkOWKnycKICAgICAgfSkKICAgIH0sCiAgICAvL+agueaNrmlk6I635Y+W5Yiw5b2T5YmN6K6w5b2V6K+m5oOF77yM5oqK5ZCN56ew5aGr5YWF5YiwaW5wdXTkuK3ljrsKICAgIGFzeW5jIGZldGNoICgpIHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoYC9yZXN0L2FydGljbGVzLyR7dGhpcy5pZH1gKQogICAgICB0aGlzLm1vZGVsID0gcmVzLmRhdGEKICAgIH0sCiAgICAvL+iOt+WPluS4i+aLieWIl+ihqOS4reeahOS4iue6p+WIhuexuwogICAgYXN5bmMgZmV0Y2hDYXRlZ29yaWVzICgpIHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoYC9yZXN0L2NhdGVnb3JpZXNgKQogICAgICB0aGlzLmNhdGVnb3JpZXMgPSByZXMuZGF0YQogICAgfQogIH0sCiAgY3JlYXRlZCAoKSB7CiAgICB0aGlzLmZldGNoQ2F0ZWdvcmllcygpCiAgICAvL+WJjemdoui/meS4quadoeS7tua7oei2s+S5i+WQju+8iHVybOW4pmlk5Y+C5pWw77yM5Y2z5b2T5YmN5aSE5LqO57yW6L6R6aG16Z2i77yJ77yM5YaN5omn6KGM56ys5LqM5Liq5p2h5Lu2CiAgICB0aGlzLmlkICYmIHRoaXMuZmV0Y2goKQogIH0sCiAgYXN5bmMgaGFuZGxlSW1hZ2VBZGRlZCAoZmlsZSwgRWRpdG9yLCBjdXJzb3JMb2NhdGlvbiwgcmVzZXRVcGxvYWRlcikgewogICAgLy8gQW4gZXhhbXBsZSBvZiB1c2luZyBGb3JtRGF0YQogICAgLy8gTk9URTogWW91ciBrZXkgY291bGQgYmUgZGlmZmVyZW50IHN1Y2ggYXM6CiAgICAvLyBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCBmaWxlKQogICAgLy9odG1s6YeM6Z2i6Ieq5bim55qE5LiA5Liq57G777yM5o+Q5Lqk6KGo5Y2V5pWw5o2u5bCx5Y+v5Lul55SoZm9ybWRhdGHjgILlj6/ku6XmnInooajljZXmlbDmja7lkoxqc29u5pWw5o2uCiAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgLy/ms6jmhI/lkI3lrZfmmK9maWxl77yI56ys5LiA5Liq77yJ77yM5Zug5Li6c2VydmVy56uv5LitdXBsb2FkLnNpbmdsZSgnZmlsZScp5o6l5pS255qE5pivZmlsZe+8jOKAnGZpbGXigJ3opoHkv53mjIHkuIDoh7QKICAgIGZvcm1EYXRhLmFwcGVuZCgiZmlsZSIsIGZpbGUpOwogICAgLy9yZXPlsLHmmK/kuIvpnaLnmoRyZXN1bHQKICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuJGh0dHAucG9zdCgidXBsb2FkIiwgZm9ybURhdGEpOwogICAgLy8gIOS4iumdouS4gOWPpeivneWwseWPr+S7peWPluS7owogICAgLy8gIGF4aW9zKHsKICAgIC8vICAgdXJsOiAiaHR0cHM6Ly9mYWtlYXBpLnlvdXJzaXRlLmNvbS9pbWFnZXMiLAogICAgLy8gICBtZXRob2Q6ICJQT1NUIiwKICAgIC8vICAgZGF0YTogZm9ybURhdGEKICAgIC8vIH0pCiAgICAvL2N1cnNvckxvY2F0aW9u5YWJ5qCH5L2N572u77yM5o+S5YWl5LiA5Liq5Y+C5pWw77yM5Y+C5pWw55qE5L2N572uCiAgICBFZGl0b3IuaW5zZXJ0RW1iZWQoY3Vyc29yTG9jYXRpb24sICJpbWFnZSIsIHJlcy5kYXRhLnVybCk7CiAgICAvL+mHjee9ruS4iuS8oOWZqAogICAgcmVzZXRVcGxvYWRlcigpOwogIH0KfQoK"},{"version":3,"sources":["ArticleEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ArticleEdit.vue","sourceRoot":"src/views","sourcesContent":["\n<template>\n  <!-- 分类创建及编辑页 -->\n  <div>\n    <!-- 如果url带id参数，就显示编辑分类，不带就显示新建分类 -->\n    <h1>{{id ? '编辑':'新建'}}文章</h1>\n    <!-- 点击保存按钮提交需要触发submit的原生事件，prevent表示阻止提交，不要跳转页面，定义一个save方法，写在methods中。在这边添加 -->\n    <el-form @submit.native.prevent=\"save\">\n      <el-form-item label=\"所属分类\">\n        <el-select v-model=\"model.categories\" multiple>\n          <!-- lable决定选项显示什么内容，value决定点击它时真正存的是什么内容 -->\n          <el-option\n            v-for=\"item in categories\"\n            :key=\"item._id\"\n            :label=\"item.name\"\n            :value=\"item._id\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"文章标题\">\n        <el-input v-model=\"model.title\" style=\"padding-left:5rem;\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"文章内容\">\n        <div>\n          <!-- <vue-editor\n            id=\"editor\"\n            useCustomImageHandler\n            @image-added=\"handleImageAdded\"\n            v-model=\"model.body\"\n          >-->\n          <vue-editor v-model=\"model.body\"></vue-editor>\n        </div>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" native-type=\"submit\">保存</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n// 解构的赋值方法\nimport { VueEditor } from \"vue2-editor\";\n\nexport default {\n  props: {\n    //在router的js文件中声明，这个页面可以跟路由尽可能的解耦\n    //接收id这个参数\n    id: {}\n  },\n  components: {\n    VueEditor\n  },\n  data () {\n    return {\n      model: {},\n      categories: [],\n    }\n  },\n  methods: {\n    //和后端的接口一样，用 async方式，把异步回调的方法换成同步，要用的话async和await成对使用\n    //新建和编辑的save方法要做条件判断\n    //新建：post接口  ；编辑：put接口\n    async save () {\n      let res\n      if (this.id) {\n        res = await this.$http.put(`/rest/articles/${this.id}`, this.model)\n      } else {\n        res = await this.$http.post('/rest/articles', this.model)\n      }\n      //eslint检查不能声明未引用的变量，所以加上这一句\n      this.model = res.data\n\n      // const res = await this.$http.post('categories',this.model)\n      // this.$http.post('categories', this.model)\n      this.$router.push('/articles/list')\n      this.$message({\n        type: 'success',\n        message: '保存成功'\n      })\n    },\n    //根据id获取到当前记录详情，把名称填充到input中去\n    async fetch () {\n      const res = await this.$http.get(`/rest/articles/${this.id}`)\n      this.model = res.data\n    },\n    //获取下拉列表中的上级分类\n    async fetchCategories () {\n      const res = await this.$http.get(`/rest/categories`)\n      this.categories = res.data\n    }\n  },\n  created () {\n    this.fetchCategories()\n    //前面这个条件满足之后（url带id参数，即当前处于编辑页面），再执行第二个条件\n    this.id && this.fetch()\n  },\n  async handleImageAdded (file, Editor, cursorLocation, resetUploader) {\n    // An example of using FormData\n    // NOTE: Your key could be different such as:\n    // formData.append('file', file)\n    //html里面自带的一个类，提交表单数据就可以用formdata。可以有表单数据和json数据\n    const formData = new FormData();\n    //注意名字是file（第一个），因为server端中upload.single('file')接收的是file，“file”要保持一致\n    formData.append(\"file\", file);\n    //res就是下面的result\n    const res = await this.$http.post(\"upload\", formData);\n    //  上面一句话就可以取代\n    //  axios({\n    //   url: \"https://fakeapi.yoursite.com/images\",\n    //   method: \"POST\",\n    //   data: formData\n    // })\n    //cursorLocation光标位置，插入一个参数，参数的位置\n    Editor.insertEmbed(cursorLocation, \"image\", res.data.url);\n    //重置上传器\n    resetUploader();\n  }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n</style>"]}]}