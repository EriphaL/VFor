{"remainingRequest":"/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eripha/Desktop/project/routine/admin/src/views/Citys.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eripha/Desktop/project/routine/admin/src/views/Citys.vue","mtime":1593703352817},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eripha/Desktop/project/routine/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Citys.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqfile":"Citys.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div ref=\"container\" class=\"svg-container\" align=\"center\">\n    <svg ref=\"svg\" id=\"svg\" :width=\"svgWidth\" :height=\"svgHeight\"\n    v-if=\"redrawToggle === true\">\n      <defs>\n        <marker\n          id=\"arrowId\"\n          viewBox=\"0 0 10 10\"\n          refX=\"1\"\n          refY=\"5\"\n          markerWidth=\"6\"\n          markerHeight=\"6\"\n          orient=\"auto\"\n        >\n          <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n        </marker>\n      </defs>\n    </svg>\n  </div>\n</template>\n<script>\n/*eslint-disable */\nimport * as d3 from \"d3\";\n\nexport default {\n  data: () => ({\n    res: {},\n    svgWidth: 0,\n    redrawToggle: true,\n\n    //   width:\n  }),\n  methods: {\n    async fetch() {\n      this.res = require(\"../assets/data/city.json\");\n    },\n    // 即响应式绘制\n    AddResizeListener() {\n      window.addEventListener(\"resize\", () => {\n        this.$data.redrawToggle = false;\n        setTimeout(() => {\n          this.$data.redrawToggle = true;\n          this.$data.svgWidth = this.$refs.container.offsetWidth * 0.8;\n          // 重新绘制\n          this.chart();\n        }, 0);\n      });\n      //   console.log([...new Set(this.edges.map(d => d.data.time))].length);\n    },\n    chart() {\n      // 无效\n      // this.svgWidth = this.$refs.container.offsetWidth *0.9\n      const data = this.res;\n      const width = this.svgWidth;\n      const height = this.svgHeight;\n      const margin = { top: 24, right: 10, bottom: 34, left: 40 };\n      const svg = d3.select(\"#svg\");\n      svg.attr(\"viewBox\", [0, 0, this.svgWidth, this.svgHeight]);\n      // svg.attr(\"viewBox\",[0,0,800,500])\n\n      const x = d3\n        .scaleLog()\n        .domain(\n          padLog(d3.extent(data.flatMap(d => [d.POP_1980, d.POP_2015])), 0.1)\n        )\n        .rangeRound([margin.left, width - margin.right]);\n      const y = d3\n        .scaleLinear()\n        .domain(\n          padLinear(\n            d3.extent(data.flatMap(d => [d.R90_10_1980, d.R90_10_2015])),\n            0.1\n          )\n        )\n        .rangeRound([height - margin.bottom, margin.top]);\n\n      function padLinear([x0, x1], k) {\n        const dx = ((x1 - x0) * k) / 2;\n        return [x0 - dx, x1 + dx];\n      }\n      function padLog(x, k) {\n        return padLinear(x.map(Math.log), k).map(Math.exp);\n      }\n\n      const endColor = d3.schemeCategory10[3];\n\n      const startColor = d3.schemeCategory10[1];\n\n      const grid = g =>\n        g\n          .attr(\"stroke\", \"currentColor\")\n          .attr(\"stroke-opacity\", 0.1)\n          .call(g =>\n            g\n              .append(\"g\")\n              .selectAll(\"line\")\n              .data(x.ticks())\n              .join(\"line\")\n              .attr(\"x1\", d => 0.5 + x(d))\n              .attr(\"x2\", d => 0.5 + x(d))\n              .attr(\"y1\", margin.top)\n              .attr(\"y2\", height - margin.bottom)\n          )\n          .call(g =>\n            g\n              .append(\"g\")\n              .selectAll(\"line\")\n              .data(y.ticks())\n              .join(\"line\")\n              .attr(\"y1\", d => 0.5 + y(d))\n              .attr(\"y2\", d => 0.5 + y(d))\n              .attr(\"x1\", margin.left)\n              .attr(\"x2\", width - margin.right)\n          );\n\n      const xAxis = g =>\n        g\n          .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n          .call(d3.axisBottom(x).ticks(width / 80, \".1s\"))\n          .call(g => g.select(\".domain\").remove())\n          .call(g =>\n            g\n              .append(\"text\")\n              .attr(\"x\", width)\n              .attr(\"y\", margin.bottom - 4)\n              .attr(\"fill\", \"currentColor\")\n              .attr(\"text-anchor\", \"end\")\n              .text(data.x)\n          );\n\n      function arc(x1, y1, x2, y2) {\n        const r = Math.hypot(x1 - x2, y1 - y2) * 2;\n        return `M${x1},${y1} A${r},${r} 0,0,1 ${x2},${y2}`;\n      }\n\n      const yAxis = g =>\n        g\n          .attr(\"transform\", `translate(${margin.left},0)`)\n          .call(d3.axisLeft(y))\n          .call(g => g.select(\".domain\").remove())\n          .call(g =>\n            g\n              .append(\"text\")\n              .attr(\"x\", -margin.left)\n              .attr(\"y\", 10)\n              .attr(\"fill\", \"currentColor\")\n              .attr(\"text-anchor\", \"start\")\n              .text(data.y)\n          );\n\n      svg.append(\"g\").call(grid);\n\n      svg.append(\"g\").call(xAxis);\n\n      svg.append(\"g\").call(yAxis);\n\n      //   箭头\n      const arrowId = \"arrowID\";\n      const gradientIds = data.map(() => {\n        //   console.log(DOM.uid(\"gradient\"));\n        //   return DOM.uid(\"gradient\");\n        return;\n      });\n\n      const defs = svg.append(\"defs\");\n\n      //   const arrowMarker =\n      // defs.append(\"marker\")\n      // .attr(\"id\",arrowId)\n      // .attr(\"markerUnits\",\"strokeWidth\")\n      // .attr(\"markerWidth\",\"8\")\n      // .attr(\"markerHeight\",\"8\")\n      // .attr(\"viewBox\",\"0 0 12 12\")\n      // .attr(\"refX\",\"13\")\n      // .attr(\"refY\",\"6\")\n      // .attr(\"orient\",\"auto\");\n\n      // defs\n      //   .append(\"marker\")\n      //   .attr(\"id\", arrowId)\n      //   // .attr(\"id\",arrowId.id)\n      //   .attr(\"markerHeight\", 10)\n      //   .attr(\"markerWidth\", 10)\n      //   .attr(\"refX\", 5)\n      //   .attr(\"refY\", 2.5)\n      //   .attr(\"orient\", \"auto\")\n\n      //   // 箭头形状填充\n      //   .append(\"path\")\n      //   .attr(\"fill\", endColor)\n      //   .attr(\"d\", \"M0,0v5l7,-2.5Z\");\n\n      //   var marker\n\n      svg\n        .append(\"g\")\n        .attr(\"fill\", \"none\")\n        .selectAll(\"path\")\n        .data(data)\n        .join(\"path\")\n        .attr(\"stroke\", \"black\")\n        .attr(\"marker-end\", \"url(#arrowId)\")\n        .attr(\"d\", d => {\n          //   console.log();\n          return arc(\n            x(d.POP_1980),\n            y(d.R90_10_1980),\n            // 终点坐标\n            x(d.POP_2015),\n            y(d.R90_10_2015)\n          );\n        });\n      // 起始原点\n      svg\n        .append(\"g\")\n        .attr(\"fill\", \"currentColor\")\n        .selectAll(\"circle\")\n        .data(data)\n        .join(\"circle\")\n        .attr(\"r\", 1.75)\n        .attr(\"cx\", d => x(d.POP_1980))\n        .attr(\"cy\", d => y(d.R90_10_1980));\n\n      svg\n        .append(\"g\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", 10)\n        .attr(\"stroke-linejoin\", \"round\")\n        .attr(\"stroke-width\", 4)\n        .selectAll(\"text\")\n        .data(data.filter(d => d.highlight))\n        .join(\"text\")\n        .attr(\"dy\", d => (d.R90_10_1980 > d.R90_10_2015 ? \"1.2em\" : \"-0.5em\"))\n        .attr(\"x\", d => x(d.POP_2015))\n        .attr(\"y\", d => y(d.R90_10_2015))\n        .text(d => d.nyt_display)\n        .call(text => text.clone(true))\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"white\");\n\n      //   svg\n      //     .append(\"defs\")\n      defs\n        .selectAll(\"linearGradient\")\n        .data(data)\n        .join(\"linearGradient\")\n        .attr(\"id\", (d, i) => gradientIds[i].id)\n        // .attr(\"id\",\"gradients\")\n        .attr(\"gradientUnits\", \"userSpaceOnUse\")\n        .attr(\"x1\", d => x(d.POP_1980))\n        .attr(\"x2\", d => x(d.POP_2015))\n        .attr(\"y1\", d => y(d.R90_10_1980))\n        .attr(\"y2\", d => y(d.R90_10_2015))\n        .call(g =>\n          g\n            .append(\"stop\")\n            .attr(\"stop-color\", startColor)\n            .attr(\"stop-opacity\", 0.5)\n        )\n        .call(g =>\n          g\n            .append(\"stop\")\n            .attr(\"offset\", \"100%\")\n            .attr(\"stop-color\", endColor)\n        );\n\n      return svg.node();\n    }\n  },\n  created() {\n    this.fetch();\n    console.log(this.svgViewBox);//can not fetch\n    // d3.json('../assets/data/city.json').then(d=>\n    // console.log(d)\n    // )\n  },\n  mounted() {\n    this.svgWidth = this.$refs.container.offsetWidth * 0.9;\n    //   console.log(this.svgWidth);\n    // this.chart();\n\n    this.AddResizeListener()\n    // this.chart();\n  },\n  updated() {\n    // this.svgWidth = this.$refs.container.offsetWidth * 0.9;\n    // this.chart();\n  },\n  computed: {\n    svgViewBox() {\n      //   const { width, heihgt } = this.svgBox;\n      const w = this.$refs.svg.offsetWidth * 0.9;\n      const h = w / 1.61803398875;\n      const svgBox = {\n        'width': w,\n        'height': h\n      };\n      //   return [0, 0, w, h];\n      return svgBox;\n    },\n    xScale() {\n      //   console.log(this.xValue);\n      return d3\n        .scaleBand()\n        .domain([...new Set(this.edges.map(d => d.data.time))])\n        .range([0, this.svgWidth - 2 * this.margin.left]);\n      // .nice();\n    },\n    // 通过线性比例尺自动生成\n    yScale() {\n      return d3\n        .scaleBand()\n        .domain(\n          this.nodes.map(d => {\n            // console.log(d);\n            return d.data.id;\n          })\n        )\n        .range([0, this.svgHeight - this.margin.bottom]);\n      // .padding(0);无效\n    },\n    // svgWidth(){return this.$refs.svg.offsetWidth*0.9},\n    svgHeight() {\n      return this.svgWidth / 1.61803398875; // 黄金比例\n    }\n  }\n};\n/*eslint-enable */\n</script>"]}]}