"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var vector=require("@any-touch/vector"),shared=require("@any-touch/shared");function computeAngle(t){var e=t.startV,r=t.prevV,o=t.activeV,n=Math.round(vector.getAngle(o,r));return{angle:Math.round(vector.getAngle(o,e)),deltaAngle:n}}function ComputeDeltaXY(){return function(t){var e=t.prevInput,r=0,o=0,n=0;if(void 0!==e&&(r=t.x-e.x,o=t.y-e.y,0!==r||0!==o)){var a=Math.sqrt(Math.pow(r,2)+Math.pow(o,2));n=Math.round(vector.radianToAngle(Math.acos(Math.abs(r)/a)))}return{deltaX:r,deltaY:o,deltaXYAngle:n}}}function computeDistance(){var t=0,e=0,r=0,o=0,n=0,a=shared.NONE;return function(u){var c=u.inputType,i=u.startInput;return shared.INPUT_START===c?(t=0,e=0,r=0,o=0,n=0,a=shared.NONE):shared.INPUT_MOVE===c&&(t=Math.round(u.points[0][shared.CLIENT_X]-i.points[0][shared.CLIENT_X]),e=Math.round(u.points[0][shared.CLIENT_Y]-i.points[0][shared.CLIENT_Y]),r=Math.abs(t),o=Math.abs(e),n=Math.round(vector.getVLength({x:r,y:o})),a=vector.getDirection(t,e)),{displacementX:t,displacementY:e,distanceX:r,distanceY:o,distance:n,overallDirection:a}}}function computeMaxLength(){var t=0;return function(e){var r=e.inputType;return shared.INPUT_START===r&&(t=e.pointLength),{maxPointLength:t}}}function computeScale(t){var e=t.startV,r=t.prevV,o=t.activeV,n=shared.round2(vector.getVLength(o)/vector.getVLength(r));return{scale:shared.round2(vector.getVLength(o)/vector.getVLength(e)),deltaScale:n}}function ComputeVAndDir(){var t,e,r=0,o=0,n=0,a=0;return function(u){if(void 0!==u){var c=u.inputType;e=e||u.startInput;var i=u.timestamp-e.timestamp;if(shared.INPUT_MOVE===c&&shared.COMPUTE_INTERVAL<i){var p=u.x-e.x,s=u.y-e.y;n=Math.round(p/i*100)/100,a=Math.round(s/i*100)/100,r=Math.abs(n),o=Math.abs(a),t=vector.getDirection(p,s)||t,e=u}}return{velocityX:r,velocityY:o,speedX:n,speedY:a,direction:t}}}function computeVector(t){return{x:t.points[1][shared.CLIENT_X]-t.points[0][shared.CLIENT_X],y:t.points[1][shared.CLIENT_Y]-t.points[0][shared.CLIENT_Y]}}function ComputeVectorForMutli(){return function(t){var e=t.prevInput,r=t.startMultiInput;if(void 0!==r&&void 0!==e&&t.id!==r.id&&1<t.pointLength)return{startV:computeVector(r),prevV:computeVector(e),activeV:computeVector(t)}}}ComputeDeltaXY._id="ComputeDeltaXY",computeDistance._id="computeDistance",computeMaxLength._id="computeMaxLength",ComputeVAndDir._id="ComputeVAndDir",ComputeVectorForMutli._id="ComputeVectorForMutli",exports.ComputeDeltaXY=ComputeDeltaXY,exports.ComputeDistance=computeDistance,exports.ComputeMaxLength=computeMaxLength,exports.ComputeVAndDir=ComputeVAndDir,exports.ComputeVectorForMutli=ComputeVectorForMutli,exports.computeAngle=computeAngle,exports.computeScale=computeScale,exports.computeVector=computeVector;
