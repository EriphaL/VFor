'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var tslib = require('tslib');
var compute = require('@any-touch/compute');
var Recognizer = require('@any-touch/recognizer');
var Recognizer__default = _interopDefault(Recognizer);

var DEFAULT_OPTIONS = {
    name: 'rotate',
    threshold: 0,
    pointLength: 2,
};
var default_1 = (function (_super) {
    tslib.__extends(default_1, _super);
    function default_1(options) {
        return _super.call(this, tslib.__assign(tslib.__assign({}, DEFAULT_OPTIONS), options)) || this;
    }
    default_1.prototype.test = function (input) {
        var pointLength = input.pointLength;
        var angle = this.computed.angle;
        return this.isValidPointLength(pointLength) && (this.options.threshold < Math.abs(angle) || this.isRecognized);
    };
    default_1.prototype.recognize = function (input, emit) {
        var computed = this.compute([compute.ComputeVectorForMutli], input);
        if ("activeV" in computed) {
            this.computed = tslib.__assign(tslib.__assign({}, this.computed), compute.computeAngle(computed));
        }
        Recognizer.recognizeForPressMoveLike(this, input, emit);
    };
    return default_1;
}(Recognizer__default));

exports.default = default_1;
