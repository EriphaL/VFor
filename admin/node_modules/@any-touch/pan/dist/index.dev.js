'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var tslib = require('tslib');
var compute = require('@any-touch/compute');
var Recognizer = require('@any-touch/recognizer');
var Recognizer__default = _interopDefault(Recognizer);

var DEFAULT_OPTIONS = {
    name: 'pan',
    threshold: 10,
    pointLength: 1
};
var default_1 = (function (_super) {
    tslib.__extends(default_1, _super);
    function default_1(options) {
        return _super.call(this, tslib.__assign(tslib.__assign({}, DEFAULT_OPTIONS), options)) || this;
    }
    default_1.prototype.test = function (input) {
        var pointLength = input.pointLength;
        var distance = this.computed.distance;
        return ((this.isRecognized || this.options.threshold <= distance) &&
            this.isValidPointLength(pointLength));
    };
    default_1.prototype.recognize = function (input, emit) {
        this.computed = this.compute([compute.ComputeVAndDir, compute.ComputeDistance, compute.ComputeDeltaXY], input);
        var isRecognized = void 0 !== this.computed.direction && Recognizer.recognizeForPressMoveLike(this, input, emit);
        if (isRecognized) {
            emit(this.options.name + this.computed.direction, this.computed);
        }
    };
    return default_1;
}(Recognizer__default));

exports.default = default_1;
